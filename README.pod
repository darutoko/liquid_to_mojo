=head1 NAME

Mojolicious::Plugin::LiquidToMojo - Liquid to mojo plugin

=head1 SYNOPSIS

  # Mojolicious
  $self->plugin('LiquidToMojo');

  # Mojolicious::Lite
  plugin 'LiquidToMojo';

  # Convert Liquid template
  my $ep_template = app->liquid_to_mojo($liquid_template);

  # All "objects" should be hashref, arrayref, or simple scalar
  foo            # => $foo
  foo.bar        # => $foo->{bar}
  foo[0]         # => $foo->[0]
  foo.bar.baz    # => $foo->{bar}{baz}
  foo.bar.baz[0] # => $foo->{bar}{baz}[0]

=head1 DESCRIPTION

L<Mojolicious::Plugin::LiquidToMojo> is a L<Mojolicious> plugin 
for convertion L<Liquid|https://github.com/Shopify/liquid> templates
in to L<Mojolicious> or Embedded Perl (.ep) templates.

Note that C<map> and C<escape_once> filters, C<raw> and C<comment> tags
are not implemented.

=head1 HELPERS

L<Mojolicious::Plugin::LiquidToMojo> registers the following helpers
to mock behavior of filters.

C<date_liquid_filter>, C<contains_liquid_filter>, C<plus_liquid_filter>, C<size_liquid_filter>
C<escape_liquid_filter>, C<capitalize_liquid_filter>, C<strip_html_liquid_filter> 

=head1 METHODS

L<Mojolicious::Plugin::LiquidToMojo> inherits all methods from
L<Mojolicious::Plugin> and implements the following new ones.

=head2 build

  $plugin = $plugin->build;

Build L<Mojolicious> template from tree.

=head2 parse

  $plugin = $plugin->parse($liquid_template);

Parse liquid template into tree.

=head2 register

  $plugin->register(Mojolicious->new);

Register plugin in L<Mojolicious> application.

=head1 SEE ALSO

L<Mojolicious>, L<Mojolicious::Guides>, L<http://mojolicio.us>.

=head1 AUTHOR

darutoko <darutoko@cpan.org>

=cut
